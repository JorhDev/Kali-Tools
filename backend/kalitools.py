import requests  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
from pyfiglet import Figlet  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —Å—Ç–∏–ª–µ ASCII
import folium  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ä—Ç
import time  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º


# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ IP-–∞–¥—Ä–µ—Å—É
def get_info_by_ip(ip="127.0.0.1"):
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º GET-–∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ IP –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ JSON
        response = requests.get(url=f"http://ip-api.com/json/{ip}").json()

        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –Ω—É–∂–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
        data = {
            "[IP]": response.get("query"),  # IP-–∞–¥—Ä–µ—Å
            "[Int prov]": response.get("isp"),  # –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ–≤–∞–π–¥–µ—Ä (ISP)
            "[Org]": response.get("org"),  # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
            "[Country]": response.get("country"),  # –°—Ç—Ä–∞–Ω–∞
            "[Region Name]": response.get("regionName"),  # –†–µ–≥–∏–æ–Ω/–æ–±–ª–∞—Å—Ç—å
            "[City]": response.get("city"),  # –ì–æ—Ä–æ–¥
            "[ZIP]": response.get("zip"),  # –ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
            "[Lat]": response.get("lat"),  # –®–∏—Ä–æ—Ç–∞
            "[Lon]": response.get("lon"),  # –î–æ–ª–≥–æ—Ç–∞
            "[Status]": response.get("status"),  # –°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞ (—É—Å–ø–µ—Ö/–æ—à–∏–±–∫–∞)
            "[Timezone]": response.get("timezone"),  # –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å
            "[AS]": response.get("as"),  # Autonomous System (AS)
        }

        # –í—ã–≤–æ–¥–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–∂–¥–æ–º—É –∫–ª—é—á—É –∏ –∑–Ω–∞—á–µ–Ω–∏—é
        for k, v in data.items():
            print(f" {k} : {v}")

        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É —Å –ø–æ–º–æ—â—å—é folium, —Ü–µ–Ω—Ç—Ä–∏—Ä—É—è –µ–µ –Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö IP-–∞–¥—Ä–µ—Å–∞
        area = folium.Map(
            location=[response.get("lat"), response.get("lon")],  # –¶–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã IP
            tiles="Stamen Terrain",  # –¢–∏–ø –∫–∞—Ä—Ç—ã (—Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å)
            attr="Map data &copy; OpenStreetMap contributors, CC-BY-SA, Imagery ¬© Stamen Design",  # –ê—Ç—Ä–∏–±—É—Ü–∏—è –∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        )
        tooltip = "Click me!"  # –¢–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ä

        # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –Ω–∞ –∫–∞—Ä—Ç—É –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º IP —Å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–π –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
        folium.Marker(
            [response.get("lat"), response.get("lon")], popup="<i>Mt. Hood Meadows</i>", tooltip=tooltip
        ).add_to(area)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç—É –≤ HTML-—Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–º –Ω–∞ IP –∏ –≥–æ—Ä–æ–¥–µ
        area.save(f"{response.get('query')}_{response.get('city')}.html")
    except requests.exceptions.ConnectionError:
        print("[!] Please check your connection!")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å —Ä–∞–º–∫–æ–π –≤ —Å—Ç–∏–ª–µ ASCII-art
def print_with_border(text, border_char='_'):
    f = Figlet(font='slant')  # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Figlet —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º 'slant'
    ascii_art = f.renderText(text)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ASCII-–∞—Ä—Ç –∏–∑ —Ç–µ–∫—Å—Ç–∞

    lines = ascii_art.split('\n')  # –†–∞–∑–±–∏–≤–∞–µ–º ASCII-–∞—Ä—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏
    max_length = max(len(line) for line in lines)  # –ù–∞—Ö–æ–¥–∏–º –¥–ª–∏–Ω—É —Å–∞–º–æ–π –¥–ª–∏–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏

    print(border_char * (max_length + 2))  # –í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–º–∫–∏

    for line in lines:
        print(border_char + line.ljust(max_length) + border_char)  
        # –í—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É —Å —Ä–∞–º–∫–æ–π –ø–æ –±–æ–∫–∞–º, –¥–æ–ø–æ–ª–Ω—è—è –ø—Ä–æ–±–µ–ª–∞–º–∏ –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã

    print(border_char * (max_length + 2))  # –ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–º–∫–∏

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def probiv():
    print_with_border('\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ë–µ—Ç–∞-–≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Kali tools')  
    print('                                 –ê–≤—Ç–æ—Ä—ã: MRX, Jorh')
    print("\n1) –ü—Ä–æ–±–∏–≤ –≤–æ –§–ò–ûüôé (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")   # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: –ø–æ–∏—Å–∫ –ø–æ –§–ò–û
    print("2) –ü—Ä–æ–±–∏–≤ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—Éüì± (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")   # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    print("3) –ü—Ä–æ–±–∏–≤ –ø–æ –í–öüí†  (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")   # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: –ø–æ–∏—Å–∫ –ø–æ –í–ö
    print("4) –ü—Ä–æ–±–∏–≤ –ø–æ Emailüìß (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")   # –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: –ø–æ–∏—Å–∫ –ø–æ Email
    print("5) –ü—Ä–æ–±–∏–≤ –ø–æ ip (–¥–æ—Å—Ç—É–ø–Ω–æ)")   # –î–æ—Å—Ç—É–ø–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ IP

    a = int(input('\n–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É —Å–ø–æ—Å–æ–±–∞ –ø—Ä–æ–±–∏–≤–∞(1üôé, 2üì±, 3üí†, 4üìß,5): '))  
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –ø–æ–∏—Å–∫–∞

    if a == 5:
        print("\n–í–≤–µ–¥–∏—Ç–µ ip –∞–¥—Ä–µ—Å")
        ip_address = input("IP –∞–¥—Ä–µ—Å: ")  
        get_info_by_ip(ip=ip_address)  
        # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ IP

    elif a == 2:
        print()
        print("–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä. –ü—Ä–∏–º–µ—Ä:+7XXXXXXXXXX,7XXXXXXXXXX")  
        # –ü–æ–∫–∞ —á—Ç–æ —Ç—É—Ç —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞)

    

    elif a ==4:
        print()
        print("–í–≤–µ–¥–∏ –ø–æ—á—Ç—É. –ü—Ä–∏–º–µ—Ä:123456789@gmail.com")  
        # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ ‚Äî –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ email, –Ω–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞

    elif a ==1:
        print()
        print("–í–≤–µ–¥–∏—Ç–µ –§–ò–û. –ü—Ä–∏–º–µ—Ä –ò–í–ê–ù–û–í –ò–í–ê–ù –ò–í–ê–ù–û–í–ò–ß")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –§–ò–û –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞ "database.txt"
        def –Ω–∞–π—Ç–∏_–≤_–±–∞–∑–µ(—Ñ–∏–æ, —Ñ–∞–π–ª_–±–∞–∑—ã):
            with open("database.txt", 'r', encoding='utf-8') as –±–∞–∑–∞:
                for —Å—Ç—Ä–æ–∫–∞ in –±–∞–∑–∞:
                    if —Ñ–∏–æ in —Å—Ç—Ä–æ–∫–∞:
                        return —Å—Ç—Ä–æ–∫–∞.strip().split('\t')  
                        # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±—É–ª—è—Ü–∏–µ–π –∏ –≤–æ–∑–≤—Ä–∞—Ç —Å–ø–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        
            return None
        
        # –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        def main():
            —Ñ–∞–π–ª_–±–∞–∑—ã = 'database.txt'
            —Ñ–∏–æ = input('–í–≤–µ–¥–∏—Ç–µ –§–ò–û: ')
            print('–ò—â–µ–º –æ–±–∏–¥—á–∏–∫–∞üîé')
            time.sleep(2)
            —Ä–µ–∑—É–ª—å—Ç–∞—Ç = –Ω–∞–π—Ç–∏_–≤_–±–∞–∑–µ(—Ñ–∏–æ, —Ñ–∞–π–ª_–±–∞–∑—ã)

            if —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
                print(f'\n–î–∞–Ω–Ω—ã–µ –ø–æ –§–ò–û "{—Ñ–∏–æ}":')
                print(f'–§–ò–û: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[0]}')
                print(f'–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –¥–µ—Ä–∂–∞—Ç–µ–ª—è: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[1]}')
                print(f'–ü–∞—Å–ø–æ—Ä—Ç: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[2]}')
                print(f'–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[3]}')
                print(f'–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–∞—Ä—Ç—ã: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[4]}')
                print(f'–ê–¥—Ä–µ—Å —Ä–∞–±–æ—Ç—ã: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[11]}')
                print(f'–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[13]}')
                print(f'–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[14]}')
                print(f'–†–µ–≥–∏–æ–Ω: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[15]}')
                print(f'–ì–æ—Ä–æ–¥: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[17]}')
                print(f'–†–∞–π–æ–Ω: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[16]}')
                print(f'–£–ª–∏—Ü–∞: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[19]}')
                print(f'–ù–æ–º–µ—Ä –¥–æ–º–∞: {—Ä–µ–∑—É–ª—å—Ç–∞—Ç[20]}')
                # –í—ã–≤–æ–¥–∏–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞)
            else:
                print(f'–§–ò–û "{—Ñ–∏–æ}" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
        
        if __name__ == '__main__':
            main()   # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —ç—Ç–æ–≥–æ –±–ª–æ–∫–∞
        
    else:
        print('\n–ù–µ –≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')   # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞
    
# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –æ–∫–Ω–æ ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
password = input('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ')
if password == '1234':
    probiv()   # –ï—Å–ª–∏ –ø–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º –º–µ–Ω—é –ø–æ–∏—Å–∫–∞/–ø—Ä–æ–±–∏–≤–∞ 
else:
    print('–î–æ—Å—Ç—É–ø –æ—Ç–∫–∞–∑–∞–Ω (–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å)')   # –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å ‚Äî –æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ